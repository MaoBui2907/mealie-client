name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  test:
    name: Run Tests Before Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install PDM
      uses: pdm-project/setup-pdm@v3

    - name: Install dependencies
      run: |
        pdm install -G test

    - name: Run tests
      run: |
        pdm run test

    - name: Run linting
      run: |
        pdm run lint

    - name: Run type checking
      run: |
        pdm run type-check

  build-and-publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    needs: test
    environment: release
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install PDM
      uses: pdm-project/setup-pdm@v3

    - name: Install dependencies
      run: |
        pdm install

    - name: Update version if manually triggered
      if: github.event_name == 'workflow_dispatch'
      run: |
        # Update version in pyproject.toml
        sed -i 's/version = ".*"/version = "${{ github.event.inputs.version }}"/' pyproject.toml
        
        # Update version in __init__.py
        sed -i 's/__version__ = ".*"/__version__ = "${{ github.event.inputs.version }}"/' src/mealie_sdk/__init__.py

    - name: Build package
      run: |
        pdm build

    - name: Verify package contents
      run: |
        tar -tzf dist/*.tar.gz | head -20
        unzip -l dist/*.whl | head -20

    - name: Publish to Test PyPI first
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true

    - name: Test installation from Test PyPI
      run: |
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ mealie-sdk
        python -c "import mealie_sdk; print(f'Successfully installed mealie_sdk v{mealie_sdk.__version__}')"

    - name: Publish to Production PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

    - name: Create GitHub Release Notes
      if: github.event_name == 'workflow_dispatch'
      uses: actions/github-script@v7
      with:
        script: |
          const version = '${{ github.event.inputs.version }}';
          const tagName = `v${version}`;
          
          // Create a new release
          const release = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: tagName,
            name: `Release ${version}`,
            body: `## What's Changed in ${version}\n\n- Automated release\n\n**Full Changelog**: https://github.com/${context.repo.owner}/${context.repo.repo}/compare/v${version}...${tagName}`,
            draft: false,
            prerelease: false
          });
          
          console.log(`Created release: ${release.data.html_url}`);

  docker-build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: github.event_name == 'release'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: your-dockerhub-username/mealie-sdk
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [build-and-publish]
    if: always()

    steps:
    - name: Send notification
      uses: actions/github-script@v7
      with:
        script: |
          const status = '${{ needs.build-and-publish.result }}';
          const version = context.payload.release?.tag_name || '${{ github.event.inputs.version }}';
          
          if (status === 'success') {
            console.log(`‚úÖ Successfully released mealie-sdk ${version} to PyPI!`);
            
            // You can add webhook notifications here
            // await fetch(process.env.SLACK_WEBHOOK_URL, {
            //   method: 'POST',
            //   headers: { 'Content-Type': 'application/json' },
            //   body: JSON.stringify({
            //     text: `üéâ New release: mealie-sdk ${version} is now available on PyPI!`
            //   })
            // });
          } else {
            console.log(`‚ùå Release failed for mealie-sdk ${version}`);
          } 